# Trigger the workflow on milestone events
on: 
  milestone:
    types: [closed]
name: Milestone Closure
jobs:
  create-release-notes:
    runs-on: ubuntu-latest
    outputs:
      notes: ${{ steps.extract-version-and-notes.outputs.RELEASE_NOTES_FILE }}
      version: ${{ steps.extract-version-and-notes.outputs.VERSION }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create Release Notes Markdown
      uses: docker://decathlon/release-notes-generator-action:3.1.5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        OUTPUT_FOLDER: temp_release_notes
        USE_MILESTONE_TITLE: "true"

    - name: Get the name of the created Release Notes file and extract Version
      id: extract-version-and-notes
      run: |
        RELEASE_NOTES_FILE=$(ls temp_release_notes/*.md | head -n 1)
        echo "RELEASE_NOTES_FILE=$RELEASE_NOTES_FILE" >> $GITHUB_ENV
        echo "RELEASE_NOTES_FILE=$RELEASE_NOTES_FILE" >> $GITHUB_OUTPUT
        VERSION=$(echo ${{ github.event.milestone.title }} | cut -d' ' -f2)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

    - name: Create a Draft Release Notes on GitHub
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: axon-${{ env.VERSION }}
        release_name:  Axon Framework v${{ env.VERSION }}
        body_path: ${{ env.RELEASE_NOTES_FILE }}
        draft: true

  announce-on-discuss:
    runs-on: ubuntu-latest
    steps:
      - name: Get authorities certificates
        run: openssl s_client -showcerts -connect discuss.axoniq.io:443 </dev/null | sed -n -e '/-.BEGIN/,/-.END/ p' > $CA_FILE

      - name: Read release notes file
        id: read_release_notes
        uses: juliangruber/read-file-action@v1
        with:
          path: ${{ env.RELEASE_NOTES_FILE }}

      - name: Create Discuss topic
        run: |
          echo $json | curl --cacert $CA_FILE -X POST "$URL" \
          -H "Api-Key: ${{ secrets.DISCUSS_KEY }}" \
          -H "Api-Username: axonbot" \
          -H 'Content-Type: application/json' \
          --data-binary @- << EOF
          {
            "title": "Axon Framework - Release ${{ env.VERSION }}",
            "raw": "I’m glad to announce that we’ve released 
          Axon Framework version ${{ env.VERSION }} on ${{ github.event.milestone.closedAt }}.<br\>
          This release contains: <br/> ${{ steps.read_release_notes.outputs.content }}",
            "category": $CATEGORY,
            "tags": ["release"]
          }
          EOF
