<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>axon</artifactId>
        <groupId>org.axonframework</groupId>
        <version>4.6.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>axon-configuration-jakarta</artifactId>

    <name>Axon Configuration (Jakarta)</name>
    <description>
        Contains all the necessary components to configure an Axon application.

        This is an automatic clone of the original module transformed to use `jakarta` packages instead of `javax` ones.
    </description>

    <packaging>jar</packaging>

    <!--
        Copies of the dependencies from the original module
    -->

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
<!--            <artifactId>axon-eventsourcing</artifactId>-->
            <artifactId>axon-eventsourcing-jakarta</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>axon-disruptor</artifactId>
            <version>${project.version}</version>
        </dependency>

        <!-- Test Dependencies -->
<!--        <dependency>-->
<!--            <groupId>javax.inject</groupId>-->
<!--            <artifactId>javax.inject</artifactId>-->
<!--            <scope>test</scope>-->
<!--        </dependency>-->
        <dependency>
<!--            <groupId>javax.persistence</groupId>-->
<!--            <artifactId>javax.persistence-api</artifactId>-->
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <version>3.0.0</version>
            <optional>true</optional>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
            <optional>true</optional>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
<!--            <artifactId>hibernate-core</artifactId>-->
            <artifactId>hibernate-core-jakarta</artifactId>
            <optional>true</optional>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- explicitly define transitive dependencies to increase version priority -->
        <!-- see https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Transitive_Dependencies -->
        <dependency>
            <groupId>org.axonframework</groupId>
<!--            <artifactId>axon-modelling</artifactId>-->
            <artifactId>axon-modelling-jakarta</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.axonframework</groupId>
<!--            <artifactId>axon-messaging</artifactId>-->
            <artifactId>axon-messaging-jakarta</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.axonframework</groupId>
                                    <artifactId>axon-configuration</artifactId>
                                    <version>${project.version}</version>
                                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>unpack-tests</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.axonframework</groupId>
                                    <artifactId>axon-configuration</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>tests</classifier>
                                    <type>test-jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.eclipse.transformer</groupId>
                <artifactId>transformer-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>transform</id>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>transform-test</id>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                        <configuration>
                            <transformDirectory>${project.build.testOutputDirectory}</transformDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>